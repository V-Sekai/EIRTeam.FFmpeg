name: GDExtension Build
description: Build GDExtension

inputs:
  platform:
    required: true
    description: Target platform.
  arch:
    required: true
    description: Target architecture.
  float-precision:
    default: 'single'
    description: Float precision (single or double).
  build-target-type:
    default: 'template_debug'
    description: Build type (template_debug or template_release).
  scons-cache:
    default: .scons-cache/
    description: Scons cache location.
  em_version:
    default: 3.1.39
    description: Emscripten version.
  em_cache_folder:
    default: emsdk-cache
    description: Emscripten cache folder.

runs:
  using: composite
  steps:
    # Android-specific setup
    - name: Android - Set up Java 17
      uses: actions/setup-java@v4
      if: ${{ inputs.platform == 'android' }}
      with:
        distribution: temurin
        java-version: 17

    # Linux-specific dependencies
    - name: Linux - dependencies
      if: ${{ inputs.platform == 'linux' }}
      shell: sh
      run: |
        sudo apt-get update -qq
        sudo apt-get install -qqq build-essential pkg-config

    # Web-specific Emscripten setup
    - name: Web - Set up Emscripten latest
      if: ${{ inputs.platform == 'web' }}
      uses: mymindstorm/setup-emsdk@v13
      with:
        version: ${{ inputs.em_version }}
        actions-cache-folder: ${{ inputs.em_cache_folder }}.${{ inputs.float-precision }}.${{ inputs.build-target-type }}

      # Download FFmpeg for Windows
    - name: Download FFmpeg for Windows
      uses: suisei-cn/actions-download-file@v1
      if: ${{ inputs.platform == 'windows' }}
      with:
        url: "https://github.com/EIRTeam/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-lgpl-godot.tar.xz"
        target: .

    # Download FFmpeg for Linux
    - name: Download FFmpeg for Linux
      uses: suisei-cn/actions-download-file@v1
      if: ${{ inputs.platform == 'linux' }}
      with:
        url: "https://github.com/EIRTeam/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-linux64-lgpl-godot.tar.xz"
        target: .

    # Extract FFmpeg tarball for Windows
    - name: Extract FFmpeg for Windows
      uses: ihiroky/extract-action@v1
      if: ${{ inputs.platform == 'windows' }}
      with:
        file_path: ffmpeg-master-latest-win64-lgpl-godot.tar.xz
        extract_dir: .

    # Extract FFmpeg tarball for Linux
    - name: Extract FFmpeg for Linux
      uses: ihiroky/extract-action@v1
      if: ${{ inputs.platform == 'linux' }}
      with:
        file_path: ffmpeg-master-latest-linux64-lgpl-godot.tar.xz
        extract_dir: .

    # Compilation step for Windows
    - name: Compilation for Windows
      uses: ./.github/actions/build
      if: ${{ inputs.platform == 'windows' }}
      with:
        sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }}
        ffmpeg-path: "../ffmpeg-master-latest-win64-lgpl-godot/"
        platform: windows
        target: ${{ matrix.target }}
        tests: ${{ matrix.tests }}

    # Compilation step for Linux
    - name: Compilation for Linux
      uses: ./.github/actions/build
      if: ${{ inputs.platform == 'linux' }}
      with:
        sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }}
        ffmpeg-path: "../ffmpeg-master-latest-linux64-lgpl-godot/"
        platform: linux
        target: ${{ matrix.target }}
        tests: ${{ matrix.tests }}

    # Build gdextension
    - name: Build GDExtension Debug Build
      shell: sh
      env:
        SCONS_CACHE: ${{ inputs.scons-cache }}
      run: |
        scons target=${{ inputs.build-target-type }} platform=${{ inputs.platform }} arch=${{ inputs.arch }} precision=${{ inputs.float-precision }}
      working-directory: gdextension_build

    # Prepare artifact for Windows
    - name: Prepare artifact for Windows
      shell: sh
      run: |
        Remove-Item gdextension_build/build/addons/ffmpeg/* -Include *.exp,*.lib,*.pdb -Force
      if: ${{ inputs.platform == 'windows' }}

    # Upload artifact for Windows
    - name: Upload artifact for Windows
      uses: ./.github/actions/upload-artifact
      if: ${{ inputs.platform == 'windows' }}
      with:
        name: artifacts
        path: ./gdextension_build/build/*

    # Upload artifact for Linux
    - name: Upload artifact for Linux
      uses: ./.github/actions/upload-artifact
      if: ${{ inputs.platform == 'linux' }}
      with:
        name: artifacts
        path: ./gdextension_build/build/*